/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.8 at Mon Feb 05 09:03:18 2018. */

#ifndef PB_SENSORBUG_PB_H_INCLUDED
#define PB_SENSORBUG_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _SensorMessage {
    uint32_t count_in;
    uint32_t count_out;
    uint32_t batteryVoltage;
    uint32_t batteryLevel;
    uint32_t pir_status;
    uint32_t light;
    uint32_t mic;
/* @@protoc_insertion_point(struct:SensorMessage) */
} SensorMessage;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SensorMessage_init_default               {0, 0, 0, 0, 0, 0, 0}
#define SensorMessage_init_zero                  {0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define SensorMessage_count_in_tag               1
#define SensorMessage_count_out_tag              2
#define SensorMessage_batteryVoltage_tag         3
#define SensorMessage_batteryLevel_tag           4
#define SensorMessage_pir_status_tag             5
#define SensorMessage_light_tag                  6
#define SensorMessage_mic_tag                    7

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorMessage_fields[8];

/* Maximum encoded size of messages (where known) */
#define SensorMessage_size                       42

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSORBUG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
